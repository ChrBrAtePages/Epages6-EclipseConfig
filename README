# Eclipse Configuration for ePages

## Prerequisite

You should have the latest Eclipse (3.4 or later) containing EPIC (0.6.35 or later) installed and running.
You should also have a recent version of ePages (6.11 or later) installed on your computer.


## Installation

This distribution contains an Eclipse project with a set of commonly used ePages tools prepared
for you to use as "External Tools" in Eclipse. Some of them take
parameters, some of them don't. Fortunately, all you need to do to
add these tools, is place this project in your Eclipse workspace.


After adding this project to your Eclipse workspace, you should see something like in this screenshot.

<img src="external_launches_screen.jpg" alt="Eclipse External Tools" title="Eclipse External Tools" />


The scripts are designed to be platform independent. So,
some variables need to be set to point to the correct executables.
You have to create Eclipse substitutions for <tt>PERL</tt>,
<tt>MAKE</tt> and set a replacement for <tt>COMPANY</tt>, like shown in the sccrenshot.


Some of the scripts rely on an environment variable called <tt>EPAGES_TESTSITE</tt>. You should
assign it, e.g. to your demo site <tt>Store</tt>.



<img src="config_string_substitution.jpg" alt="Eclipse settings" title="Eclipse settings" />




We also have a list of perl code templates. If you want to add these,
go to the EPIC Editor Templates, and click on "Import".

<img src="config_code_templates.jpg" alt="Import code templates" title="import code templates" /> 

Select <tt>perl_templates.xml</tt> from your EclipseConfig project.
<img src="config_template_select.jpg" alt="selecting templates.xml" title="selecting templates.xml" /> 


## Perl::Critic

We encourage you to use Perl::Critic to enforce clean perl code. To use ePages default settings, 
set the environment variable <tt>PERLCRITIC</tt> to point to <tt>$ENV{EPAGES_CARTRIDGES}/Core/Scripts/perlcritic_hard.conf</tt>.
We have also provided an extended Perl::Critic configuration that even includes informational messages in <tt>perlcritic_hard_ide.conf</tt>.
You may place this file into your project root folder, name it <tt>.perlcriticrc</tt>, and adapt it to your needs.

To enable some additional Perl::Critic rules defined by ePages, you have to add 
<tt>.../DE_EPAGES/Core/Scripts</tt> and <tt>.../DE_EPAGES/XML/Scripts</tt> to your <tt>PERL5LIB</tt> environment variable.

See the following screenshot for the configuration settings of Perl::Critic in Eclipse.

<img src="config_perlcritic.jpg" alt="Perlcritic config" title="Perlcritic config" />

## PerlTidy
ePages uses the following line of PerlTidy settings. Feel free to use this as a starting point, name it <tt>.perltidyrc</tt> and
place it in your project root folder, and add the same content in Eclipse Preferences &gt; Perl EPIC &gt; Source Formatter &gt; Options.

```
-st -se -ibc -i=4 -cti=0  -sot -ndws -pt=1 -bt=1 -sbt=1 -bbt=1 -nsfs -nolq -l=160
-wbb="% + - * / x != == >= <= =~ !~ &lt; &gt; | &amp; = **= += *= &= &lt;&lt;= &&= -= /= |= >>= ||= //= .= %= ^= x="
```
## Last Modification
February 15th, 2011 by <a href="mailto:training@epages.com">ePages Training Department</a>.

## External Tools Launches

Here's a list of what is currently included in our distribution:

<dd>

<dl>
<dt>ep6 buildCartridgePatch</dt>
<dd>calls DE_EPAGES/Installer/Scripts/buildCartridgePatch.pl</dd>
<dd>usage: creation of patch files for DE_EPAGES based cartridges</dd>
</dl>

<dl>
<dt>ep6 buildPartnerCartridgePatch</dt>
<dd>calls DE_EPAGES/Installer/Scripts/buildPartnerCartridgePatch.pl</dd>
<dd>usage: creation of patch files for partner cartridges</dd>
</dl>

<dl>
<dt>ep6 checkJSSyntax</dt>
<dd>calls DE_EPAGES/Presentation/Scripts/checkJSSyntax.pl</dd>
<dd>usage: checks javascript syntax</dd>
<dd>context: single file</dd>
</dl>

<dl>
<dt>ep6 checkLanguageTags</dt>
<dd>calls DE_EPAGES/Presentation/Scripts/checkLanguageTags.pl</dd>
<dd>usage: checks unused and untranslated language tags</dd>
<dd>context: Store</dd>
</dl>

<dl>
<dt>ep6 checkUnusedFiles</dt>
<dd>calls DE_EPAGES/Presentation/Scripts/checkUnusedFiles.pl</dd>
<dd>usage: checks unused xml and html files</dd>
<dd>context: Store</dd>
</dl>

<dl>
<dt>ep6 clearPageCache</dt>
<dd>calls DE_EPAGES/Object/Scripts/clearPageCache.pl</dd>
<dd>usage: clears the page cache and template cache for an object</dd>
<dd>context: object path</dd>
</dl>

<dl>
<dt>ep6 compileTemplate (Single File)</dt>
<dd>calls DE_EPAGES/Presentation/Scripts/createCtmpls.pl</dd>
<dd>usage: creates ctmpl version of template file</dd>
<dd>context: single file</dd>
</dl>

<dl>
<dt>ep6 compileTemplates (Cartridge)</dt>
<dd>calls DE_EPAGES/Presentation/Scripts/createCtmpls.pl</dd>
<dd>usage: creates ctmpl versions for all templates of one store, or one single cartridge</dd>
<dd>context: cartridge or Store</dd>
</dl>

<dl>
<dt>ep6 copyCartridgeData</dt>
<dd>calls DE_EPAGES/Installer/Scripts/copyCartridgeData.pl</dd>
<dd>usage: copies files from Data directory into Shared</dd>
<dd>context: cartridge</dd>
</dl>

<dl>
<dt>ep6 createCartridge</dt>
<dd>calls DE_EPAGES/Cartridge/Scripts/CreateCartridge.pl</dd>
<dd>usage: creates a new cartridge based on a cartridge template</dd>
<dd>context: cartridge</dd>
</dl>

<dl>
<dt>ep6 deleteCtmpls</dt>
<dd>calls DE_EPAGES/Presentation/Scripts/createCtmpls.pl with option -delete</dd>
<dd>usage: deletes ctmpl versions for all templates of one store, or one single cartridge</dd>
<dd>context: cartridge or Store</dd>
</dl>

<dl>
<dt>ep6 deleteObject (Using File)</dt>
<dd>calls DE_EPAGES/Object/Scripts/delete.pl using selected file as input</dd>
<dd>usage: deletes objects from database where XML file contains delete="1" attribute</dd>
<dd>context: file</dd>
</dl>

<dl>
<dt>ep6 deleteObject (Using Path)</dt>
<dd>calls DE_EPAGES/Object/Scripts/delete.pl prompting for an object path to delete</dd>
<dd>usage: deletes objects from database matching object path in prompt</dd>
<dd>context: prompt</dd>
</dl>

<dl>
<dt>ep6 deleteHook</dt>
<dd>calls DE_EPAGES/Trigger/Scripts/delete.pl using selected file as input</dd>
<dd>usage: deletes Hooks from database where XML file contains delete="1" attribute</dd>
<dd>context: file</dd>
</dl>

<dl>
<dt>ep6 exportShop</dt>
<dd>calls DE_EPAGES/Object/Scripts/export.pl -withdefaults -withoutguids -withoutcreationdate</dd>
<dd>usage: exports one shop as xml file, saving contents into $TEMP dir</dd>
<dd>context: shop</dd>
</dl>

<dl>
<dt>ep6 findUseProblems (Write Cache File)</dt>
<dd>calls DE_EPAGES/XML/Scripts/findUseProblems.pl to create EXPORTS-API cache file</dd>
<dd>usage: findUseProblems database is used in our perlcritic scripts to find missing/wrong perl package imports</dd>
<dd>context: installation</dd>
</dl>

<dl>
<dt>ep6 importHook</dt>
<dd>calls DE_EPAGES/Trigger/Scripts/import.pl using selected file as input</dd>
<dd>usage: use to import new hook definitions into the database</dd>
<dd>context: file</dd>
</dl>

<dl>
<dt>ep6 importObject</dt>
<dd>calls DE_EPAGES/Object/Scripts/import.pl using selected file as input</dd>
<dd>usage: use to import new object definitions into the database</dd>
<dd>context: file</dd>
</dl>

<dl>
<dt>ep6 importShopChildDependencies</dt>
<dd>calls DE_EPAGES/Shop/Scripts/importShopChildDependencies.pl using selected file as input</dd>
<dd>usage: use to import new shop child dependency information into the database</dd>
<dd>context: file</dd>
</dl>

<dl>
<dt>ep6 invalidateAllStyles</dt>
<dd>calls DE_EPAGES/Design/Scripts/invalidateAllStyles.pl</dd>
<dd>usage: use when SF-Style.StyleSheet.css file has changed, to re-create cached style information</dd>
<dd>context: store</dd>
</dl>

<dl>
<dt>ep6 listShopChildDependencies</dt>
<dd>calls DE_EPAGES/Shop/Scripts/ListShopChildDependencies.pl</dd>
<dd>usage: use to list ship child dependency information</dd>
<dd>context: store</dd>
</dl>

<dl>
<dt>ep6 PerlCritic</dt>
<dd>calls DE_EPAGES/Core/Scripts/critic.pl using selected file or directory as input</dd>
<dd>usage: use to check perlcritic compliance of your code. You can enter perlcritic.conf or perlcritic_hard.conf to choose from our two preset configurations.</dd>
<dd>context: file/directory</dd>
</dl>

<dl>
<dt>ep6 setAttribute</dt>
<dd>calls DE_EPAGES/Object/Scripts/set.pl</dd>
<dd>usage: use to set object attributes via command-line. Prompts for object path and attribute details</dd>
<dd>context: object path</dd>
</dl>

<dl>
<dt>ep6 setJSDebugLevel</dt>
<dd>calls DE_EPAGES/Object/Scripts/set.pl on System object setting JSDebugLevel attribute</dd>
<dd>usage: use to set javascript debug level for store database.</dd>
<dd>context: store</dd>
</dl>

<dl>
<dt>ep6 setMaxFeature</dt>
<dd>calls DE_EPAGES/Shop/Scripts/setMaxFeature.pl</dd>
<dd>usage: updates feature availability for one shop.</dd>
<dd>context: shop</dd>
</dl>

<dl>
<dt>ep6 setShopWizardFlag</dt>
<dd>calls DE_EPAGES/Object/Scripts/set.pl</dd>
<dd>usage: used to set ShopWizardFlag setting for one shop.</dd>
<dd>context: shop</dd>
</dl>

<dl>
<dt>ep6 StoreCacheReset</dt>
<dd>calls DE_EPAGES/WebInterface/Scripts/StoreCacheReset.pl</dd>
<dd>usage: used to reset object cache info (usually on shop object).</dd>
<dd>context: shop</dd>
</dl>

<dl>
<dt>make [target]</dt>
<dd>generic make target</dd>
<dd>usage: call with popup to specify make target.</dd>
<dd>context: cartridge</dd>
</dl>

<dl>
<dt>make coverage_report</dt>
<dd>calls make coverage_report on cartridge</dd>
<dd>usage: generates html coverage report for cartridge (run make test_coverage first)</dd>
<dd>context: cartridge</dd>
</dl>

<dl>
<dt>make generate</dt>
<dd>calls make generate on cartridge</dd>
<dd>usage: generates database model for cartridge</dd>
<dd>context: cartridge</dd>
</dl>

<dl>
<dt>make generage_merge</dt>
<dd>calls make generage_merge on cartridge</dd>
<dd>usage: generates database model for cartridge and merges into CVS (epages internal)</dd>
<dd>context: cartridge</dd>
</dl>

<dl>
<dt>make generage_update</dt>
<dd>calls make generate_update on cartridge</dd>
<dd>usage: generates database model for cartridge and merges into local directory (epages internal)</dd>
<dd>context: cartridge</dd>
</dl>

<dl>
<dt>make install</dt>
<dd>calls make install on cartridge</dd>
<dd>usage: installs cartridge on store</dd>
<dd>context: cartridge</dd>
</dl>

<dl>
<dt>make patch</dt>
<dd>calls make patch on cartridge</dd>
<dd>usage: runs patch cartridge process on store</dd>
<dd>context: cartridge</dd>
</dl>

<dl>
<dt>make register</dt>
<dd>calls make register on cartridge</dd>
<dd>usage: runs feature registration process on installation</dd>
<dd>context: cartridge</dd>
</dl>

<dl>
<dt>make restart</dt>
<dd>calls make restart</dd>
<dd>usage: restarts epages application servers (needs admin permissions)</dd>
<dd>context: installation</dd>
</dl>

<dl>
<dt>make uninstall</dt>
<dd>calls make uninstall</dd>
<dd>usage: uninstalls cartridge from store</dd>
<dd>context: cartridge</dd>
</dl>

<dl>
<dt>make uninstall install</dt>
<dd>calls make uninstall install</dd>
<dd>usage: uninstalls and installs cartridge from store</dd>
<dd>context: cartridge</dd>
</dl>

<dl>
<dt>make unregister</dt>
<dd>calls make unregister on cartridge</dd>
<dd>usage: removes feature registration from installation</dd>
<dd>context: cartridge</dd>
</dl>

<dl>
<dt>make test (Regression)</dt>
<dd>calls make test from DE_EPAGES::Test cartridge</dd>
<dd>usage: runs regression test suite to ensure overall consistency of epages installation</dd>
<dd>context: store</dd>
</dl>

<dl>
<dt>perlRun</dt>
<dd>executes selected file</dd>
<dd>usage: generic target to run a perl script or test case</dd>
<dd>context: file</dd>
</dl>

<dl>
<dt>perl -e</dt>
<dd>evaulages single line of code</dd>
<dd>usage: target to run a one-liner</dd>
<dd>context: prompt</dd>
</dl>

<dl>
<dt>perlProfile</dt>
<dd>runs perl -DNYTProf on single file</dd>
<dd>usage: runs perl script with profiling enabled</dd>
<dd>context: file</dd>
</dl>

<dl>
<dt>perlProfile Report</dt>
<dd>generates html-report from previous perlProfile run</dd>
<dd>usage: run this target after running perlProfile</dd>
<dd>context: file</dd>
</dl>

<dl>
<dt>RefactorPerlCritic (*)</dt>
<dd>calls DE_EPAGES/Core/Scripts/refactorCritic.pl using selected file as input</dd>
<dd>usage: use to refactor your perl code to comply to a specific perlcritic rule.</dd>
<dd>context: file</dd>
</dl>

</dd>



</body>
</html>